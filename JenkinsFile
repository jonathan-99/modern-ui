pipeline {
    agent any

    stages {
        stage('checks') {
            steps {
                script {
                sh '''
                echo "this is node version $(node -v)"
                echo "this is the npm version $(npm -v)"
                echo "this is the ufw data $(ufw status)"
                echo "docker version $(docker -v)"
                echo "typscript version $(tsc -v)"
                '''
                }
            }
        }
        stage('Clone Repository') {
            steps {
                script {
                    def gitRepoUrl = 'https://github.com/jonathan-99/modern-ui.git'
                    def repoDir = "${WORKSPACE}/repository"
                    echo "Cloning repository from $gitRepoUrl to $repoDir..."
                    sh "git clone $gitRepoUrl $repoDir"
                    sh "git update-index --chmod=+x $repoDir/jenkins/startup-and-install.sh"
                }
            }
        }
        stage('Change permissions') {
            steps {
                script {
                    file_1=$("jenkins/startup-and-install.sh")
                    chmod +x $file_1
                    filePermissions=$(ls -l $file_1)
                    echo "File permissions: ${filePermissions}"

                    file_2=$("jenkins/download-and-run-app.sh")
                    chmod +x $file_2
                    filePermissions=$(ls -l $file_2)
                    echo "File permissions: ${filePermissions}"

                    file_3=$("jenkins/unittests_and_coverage_report.sh")
                    chmod +x $file_3
                    filePermissions=$(ls -l $file_3)
                    echo "File permissions: ${filePermissions}"
                }
            }
        }
        stage('Download docker, install libraries') {
            steps {
                script {
                    sh "chmod +x -R ${env.WORKSPACE}" // include jenkins/
                    sh "./jenkins/startup-and-install.sh"
                }
            }
        }
        stage('unittests and coverage report') {
            steps {
                script {
                    sh "./jenkins/unittests_and_coverage_report.sh"
                }
            }
        }
        stage('Run Application') {
            steps {
                script {
                    echo "Download docker, install typscript files, compile, start docker on port 7000"
                    sh "./jenkins/download-and-run-app.sh"
                }
            }
        }
        stage('temp') {
            steps {
                script {
                    //pass
                }
            }
        }
    }
}
